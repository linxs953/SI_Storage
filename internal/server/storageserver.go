// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2
// Source: Storage.proto

package server

import (
	"context"

	"Storage/internal/logic"
	"Storage/internal/svc"
	"Storage/pb/Storage/storage"
)

type StorageServer struct {
	svcCtx *svc.ServiceContext
	storage.UnimplementedStorageServer
}

func NewStorageServer(svcCtx *svc.ServiceContext) *StorageServer {
	return &StorageServer{
		svcCtx: svcCtx,
	}
}

// 添加新任务
func (s *StorageServer) CreateTask(ctx context.Context, in *storage.CreateTaskRequest) (*storage.CreateTaskResponse, error) {
	l := logic.NewCreateTaskLogic(ctx, s.svcCtx)
	return l.CreateTask(in)
}

// 删除任务
func (s *StorageServer) DeleteTask(ctx context.Context, in *storage.DeleteTaskRequest) (*storage.OperationResponse, error) {
	l := logic.NewDeleteTaskLogic(ctx, s.svcCtx)
	return l.DeleteTask(in)
}

// 更新任务
func (s *StorageServer) UpdateTask(ctx context.Context, in *storage.UpdateTaskRequest) (*storage.OperationResponse, error) {
	l := logic.NewUpdateTaskLogic(ctx, s.svcCtx)
	return l.UpdateTask(in)
}

// 查看单个任务详情
func (s *StorageServer) ViewTask(ctx context.Context, in *storage.ViewTaskRequest) (*storage.Task, error) {
	l := logic.NewViewTaskLogic(ctx, s.svcCtx)
	return l.ViewTask(in)
}

// 列出所有任务
func (s *StorageServer) ListTasks(ctx context.Context, in *storage.Empty) (*storage.TaskList, error) {
	l := logic.NewListTasksLogic(ctx, s.svcCtx)
	return l.ListTasks(in)
}

// 批量删除任务
func (s *StorageServer) BatchDeleteTasks(ctx context.Context, in *storage.BatchDeleteTasksRequest) (*storage.OperationResponse, error) {
	l := logic.NewBatchDeleteTasksLogic(ctx, s.svcCtx)
	return l.BatchDeleteTasks(in)
}
