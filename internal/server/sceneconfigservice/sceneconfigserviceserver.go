// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.6
// Source: Storage.proto

package server

import (
	"context"

	"Storage/internal/logic/sceneconfigservice"
	"Storage/internal/svc"
	"Storage/storage"
)

type SceneConfigServiceServer struct {
	svcCtx *svc.ServiceContext
	storage.UnimplementedSceneConfigServiceServer
}

func NewSceneConfigServiceServer(svcCtx *svc.ServiceContext) *SceneConfigServiceServer {
	return &SceneConfigServiceServer{
		svcCtx: svcCtx,
	}
}

// 场景配置
func (s *SceneConfigServiceServer) CreateSceneConfig(ctx context.Context, in *storage.CreateSceneConfigRequest) (*storage.SceneConfigResponse, error) {
	l := sceneconfigservicelogic.NewCreateSceneConfigLogic(ctx, s.svcCtx)
	return l.CreateSceneConfig(in)
}

func (s *SceneConfigServiceServer) GetSceneConfig(ctx context.Context, in *storage.GetSceneConfigRequest) (*storage.SceneConfigResponse, error) {
	l := sceneconfigservicelogic.NewGetSceneConfigLogic(ctx, s.svcCtx)
	return l.GetSceneConfig(in)
}

func (s *SceneConfigServiceServer) UpdateSceneConfig(ctx context.Context, in *storage.UpdateSceneConfigRequest) (*storage.SceneConfigResponse, error) {
	l := sceneconfigservicelogic.NewUpdateSceneConfigLogic(ctx, s.svcCtx)
	return l.UpdateSceneConfig(in)
}

func (s *SceneConfigServiceServer) DeleteSceneConfig(ctx context.Context, in *storage.DeleteSceneConfigRequest) (*storage.DeleteResponse, error) {
	l := sceneconfigservicelogic.NewDeleteSceneConfigLogic(ctx, s.svcCtx)
	return l.DeleteSceneConfig(in)
}

func (s *SceneConfigServiceServer) ListSceneConfigs(ctx context.Context, in *storage.ListSceneConfigsRequest) (*storage.SceneConfigListResponse, error) {
	l := sceneconfigservicelogic.NewListSceneConfigsLogic(ctx, s.svcCtx)
	return l.ListSceneConfigs(in)
}
