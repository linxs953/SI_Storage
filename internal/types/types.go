// Code generated by goctl. DO NOT EDIT.
package types

type IndexVO struct {
	Message string `json:"message"`
}

type StartDto struct {
	JobType string `json:"jobType"`
	JobSpec string `json:"jobSpec"`
}

type StartResp struct {
	Code    int         `json:"code"`
	Message string      `json:"messsage"`
	Data    interface{} `json:"data"`
}

type SyncDto struct {
	Type   string `json:"type"`
	DocUrl string `json:"docUrl"`
}

type SyncVO struct {
	Code    int                    `json:"code"`
	Message string                 `json:"messsage"`
	Data    map[string]interface{} `json:"data"`
}

type DeleteTaskRunRecordDto struct {
	ExecId string `json:"execId"`
}

type DeleteTaskRunRecordResp struct {
	Code    int         `json:"code"`
	Message string      `json:"messsage"`
	Data    interface{} `json:"data"`
}

type GetRunDetailDto struct {
	TaskId string `json:"taskId"`
	ExecId string `json:"execId"`
}

type GetRunDetailResp struct {
	Code     int        `json:"code"`
	Message  string     `json:"messsage"`
	TaskMeta TaskMeta   `json:"taskMeta"`
	TaskRun  TaskRecord `json:"taskRun"`
}

type GetAllTaskRunRecordDto struct {
	TaskId   string `json:"taskId"`
	PageSize string `json:"pageSize"`
	PageNum  string `json:"pageNum"`
}

type GetAllTaskRunRecordResp struct {
	Code        int          `json:"code"`
	Message     string       `json:"messsage"`
	TaskMeta    TaskMeta     `json:"taskMeta"`
	TaskRun     []TaskRecord `json:"taskRun"`
	TotalNum    int          `json:"totalNum"`
	TotalPage   int          `json:"totalPage"`
	CurrentPage int          `json:"currentPage"`
}

type TaskMeta struct {
	TaskName   string `json:"taskName"`
	TaskID     string `json:"taskId"`
	Author     string `json:"author"`
	SceneCount int    `json:"sceneCount"`
	CreateTime string `json:"createTime"`
	UpdateTime string `json:"updateTime"`
}

type TaskRecord struct {
	RunId        string                   `json:"runId"`
	TaskId       string                   `json:"taskId"`
	State        int                      `json:"state"`
	SceneRecords []map[string]interface{} `json:"sceneRecords"`
	CreateTime   string                   `json:"createTime"`
	FinishTime   string                   `json:"finishTime"`
}

type GetSceneWithIdDto struct {
	TaskID string `json:"taskId"`
}

type GetSceneWithIdResp struct {
	Code    int              `json:"code"`
	Message string           `json:"messsage"`
	Data    GetTaskSceneData `json:"data"`
}

type GetTaskSceneData struct {
	Scenes    []string               `json:"scenes"`
	SceneInfo map[string]interface{} `json:"sceneInfo"`
}

type GetPreActionsDto struct {
	DependRefer    string `json:"dependRefer"`
	CurrentAcRefer string `json:"currentAcRefer"`
}

type GetPreActionsResp struct {
	Code    int                      `json:"code"`
	Message string                   `json:"messsage"`
	Data    []map[string]interface{} `json:"data"`
}

type TaskInfo struct {
	TaskId     string      `json:"taskId"`
	TaskName   string      `json:"taskName"`
	Author     string      `json:"author"`
	TaskType   string      `json:"taskType"`
	TaskSpec   interface{} `json:"taskSpec"`
	CreateTime string      `json:"createTime"`
	UpdateTime string      `json:"updateTime"`
}

type RunResp struct {
	RunId    string      `json:"runId"`
	TaskId   string      `json:"taskId"`
	TaskSpec interface{} `json:"taskSpec"`
	State    int         `json:"state"`
	Message  string      `json:"message"`
}

type CreateTaskDto struct {
	TaskName  string       `json:"taskName"`
	Author    string       `json:"author"`
	SceneList []SceneCount `json:"sceneList"`
}

type SceneCount struct {
	SceneId string `json:"sceneId"`
	Count   int    `json:"count"`
}

type CreateTaskResp struct {
	Code    int         `json:"code"`
	Message string      `json:"messsage"`
	Data    interface{} `json:"data"`
}

type UpdateTaskDto struct {
	TaskId   string        `json:"taskId"`
	TaskName string        `json:"taskName"`
	TaskType string        `json:"taskType"`
	Author   string        `json:"author"`
	TaskSpec []SceneInTask `json:"taskSpec"`
}

type SceneInTask struct {
	SceneId     string                   `json:"sceneId"`
	SceneName   string                   `json:"sceneName"`
	Description string                   `json:"description"`
	Author      string                   `json:"author"`
	Retry       int                      `json:"retry"`
	SearchKey   string                   `json:"searchKey"`
	EnvKey      string                   `json:"envKey"`
	Timeout     int                      `json:"timeout"`
	Actions     []map[string]interface{} `json:"actions"`
}

type UpdateTaskResp struct {
	Code    int         `json:"code"`
	Message string      `json:"messsage"`
	Data    interface{} `json:"data"`
}

type DeleteTaskDto struct {
	TaskId string `json:"taskId"`
}

type DeleteTaskResp struct {
	Code    int         `json:"code"`
	Message string      `json:"messsage"`
	Data    interface{} `json:"data"`
}

type GetTaskDto struct {
	TaskId string `json:"taskId"`
}

type GetTaskResp struct {
	Code    int      `json:"code"`
	Message string   `json:"messsage"`
	Data    TaskInfo `json:"data"`
}

type GetTaskListDto struct {
	PageNum  int `json:"pageNum"`
	PageSize int `json:"pageSize"`
}

type GetTaskListResp struct {
	Code        int                      `json:"code"`
	Message     string                   `json:"messsage"`
	Data        []map[string]interface{} `json:"data"`
	TotalNum    int                      `json:"totalNum"`
	TotalPage   int                      `json:"totalPage"`
	CurrentPage int                      `json:"currentPage"`
}

type RunTaskDto struct {
	TaskId string `path:"taskId"`
}

type RunTaskResp struct {
	Code    int     `json:"code"`
	Message string  `json:"messsage"`
	Data    RunResp `json:"data"`
}

type TDInitResp struct {
	Code    int
	Message string
}

type SearchScenesDto struct {
	Keyword string `json:"keyword"`
}

type SearchScentVo struct {
	Code    int                      `json:"code"`
	Message string                   `json:"message"`
	Data    []map[string]interface{} `json:"data"`
}

type GetSceneListDto struct {
	Page     int `json:"page"`
	PageSize int `json:"pageSize"`
}

type GetSceneListVO struct {
	Code    int                      `json:"code"`
	Message string                   `json:"message"`
	Data    []map[string]interface{} `json:"data"`
}

type CreateSceneDto struct {
	Scname      string   `json:"scname"`
	Author      string   `json:"author"`
	Description string   `json:"description"`
	Actions     []string `json:"actions"`
	Key         string   `json:"key"`
	Env         string   `json:"env"`
}

type CreateSceneVO struct {
	Code    int             `json:"code"`
	Message string          `json:"message"`
	Data    CreateSceneData `json:"data"`
}

type CreateSceneData struct {
	SceneId   string `json:"sceneId,omitempty"`
	SceneName string `json:"scname,omitempty"`
	Author    string `json:"author,omitempty"`
}

type GetSceneDto struct {
	Scid string `json:"scid"`
}

type GetSceneVO struct {
	Code    int          `json:"code"`
	Message string       `json:"message"`
	Data    GetSceneData `json:"data,omitempty"`
}

type GetSceneData struct {
	ID          string                   `json:"id,omitempty"`
	Author      string                   `json:"author,omitempty"`
	SceneName   string                   `json:"scname,omitempty"`
	Description string                   `json:"description,omitempty"`
	SceneId     string                   `json:"sceneId,omitempty"`
	SearchKey   string                   `json:"searchKey,omitempty"`
	Env         string                   `json:"env,omitempty"`
	Timeout     int                      `json:"timeout,omitempty"`
	Retry       int                      `json:"retry,omitempty"`
	Actions     []map[string]interface{} `json:"actions,omitempty"`
	CreateAt    string                   `json:"createAt,omitempty"`
	UpdateAt    string                   `json:"updateAt,omitempty"`
}

type DeleteSceneDto struct {
	Scid string `json:"scid"`
}

type DeleteSceneVO struct {
	Code    int                    `json:"code"`
	Message string                 `json:"message"`
	Data    map[string]interface{} `json:"data"`
}

type UpdateSceneDto struct {
	Scid string      `json:"scid"`
	Data SceneUpdate `json:"data"`
}

type SceneUpdate struct {
	Scname      string                   `json:"scname"`
	Description string                   `json:"description"`
	Timeout     int                      `json:"timeout"`
	Retry       int                      `json:"retry"`
	Actions     []map[string]interface{} `json:"actions"`
}

type UpdateSceneVO struct {
	Code    int          `json:"code"`
	Message string       `json:"message"`
	Data    GetSceneData `json:"data,omitempty"`
}

type ApiDetailDto struct {
	ApiId string `path:"apiId"`
}

type ApiListDto struct {
	PageNum  int `query:"pageNum"`
	PageSize int `query:"pageSize"`
}

type ApiDetailResp struct {
	Code    int                    `json:"code"`
	Message string                 `json:"messsage"`
	Data    map[string]interface{} `json:"data"`
}

type ApiListResp struct {
	Code        int                      `json:"code"`
	Message     string                   `json:"messsage"`
	Total       int                      `json:"total"`
	CurrentPage int                      `json:"currentPage"`
	TotalNum    int                      `json:"totalNum"`
	Data        []map[string]interface{} `json:"data"`
}

type ApiSearchResp struct {
	Code    int                      `json:"code"`
	Message string                   `json:"messsage"`
	Data    []map[string]interface{} `json:"data"`
}

type SearchDto struct {
	Keyword string `query:"keyword"`
}
